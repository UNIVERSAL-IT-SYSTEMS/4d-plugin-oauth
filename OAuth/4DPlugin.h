/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : OAuth
 #	author : miyako
 #	12/07/03
 #
 # --------------------------------------------------------------------------------*/



// --- Detection

// --- MISC
//void PATH_From_user_selection(sLONG_PTR *pResult, PackagePtr pParams);
//void PATH_Get_known_folder(sLONG_PTR *pResult, PackagePtr pParams);
//void VOLUME_Is_ejectable(sLONG_PTR *pResult, PackagePtr pParams);
//void VOLUME_Is_remote(sLONG_PTR *pResult, PackagePtr pParams);
//void STRUCTURE_Import_definition(sLONG_PTR *pResult, PackagePtr pParams);
//void SYSTEM_Get_unixtime(sLONG_PTR *pResult, PackagePtr pParams);
//void SYSTEM_Generate_UUID(sLONG_PTR *pResult, PackagePtr pParams);
//void SYSTEM_Get_timestring(sLONG_PTR *pResult, PackagePtr pParams);
//void SYSTEM_Get_timestamp(sLONG_PTR *pResult, PackagePtr pParams);
//void PROCESS_Get_id(sLONG_PTR *pResult, PackagePtr pParams);
//void PROCESS_GET_LIST(sLONG_PTR *pResult, PackagePtr pParams);
//void STACK_Get_available_size(sLONG_PTR *pResult, PackagePtr pParams);
//void PICTURE_GET_RAW_DATA(sLONG_PTR *pResult, PackagePtr pParams);

// --- JSON
//void JSON_Strip_white_space(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Parse_text(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Export_to_text(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_CLOSE(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_New(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_GET_BOOL_ARRAY(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_GET_CHILD_NODES(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_GET_LONG_ARRAY(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_child_by_name(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_child_by_position(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_comment(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_GET_TEXT_ARRAY(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_GET_REAL_ARRAY(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_bool(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_real(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_long(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_type(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_name(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Get_text(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_DELETE_ITEM_BY_NAME(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_DELETE_ITEM_BY_POSITION(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_SET_TYPE(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_SET_NULL(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_SET_COMMENT(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_SET_NAME(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_SET_TEXT(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_SET_LONG(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_SET_REAL(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_bool_array(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_real_array(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_long_array(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_text_array(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_text(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_long(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_real(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_bool(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_Append_node(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_SET_BOOL(sLONG_PTR *pResult, PackagePtr pParams);
//void JSON_CLEAR(sLONG_PTR *pResult, PackagePtr pParams);

// --- ZIP
//void Unzip(sLONG_PTR *pResult, PackagePtr pParams);
//void Zip(sLONG_PTR *pResult, PackagePtr pParams);

// --- Common Crypto
//void HMACMD5(sLONG_PTR *pResult, PackagePtr pParams);
//void HMACSHA1(sLONG_PTR *pResult, PackagePtr pParams);
//void HMACSHA256(sLONG_PTR *pResult, PackagePtr pParams);
//void HMACSHA384(sLONG_PTR *pResult, PackagePtr pParams);
//void HMACSHA512(sLONG_PTR *pResult, PackagePtr pParams);
//void SHA384(sLONG_PTR *pResult, PackagePtr pParams);
//void SHA512(sLONG_PTR *pResult, PackagePtr pParams);
//void MD5(sLONG_PTR *pResult, PackagePtr pParams);
//void SHA1(sLONG_PTR *pResult, PackagePtr pParams);
//void SHA256(sLONG_PTR *pResult, PackagePtr pParams);

// --- cURL
//void _cURL(sLONG_PTR *pResult, PackagePtr pParams);
//void cURL_Escape_url(sLONG_PTR *pResult, PackagePtr pParams);
//void cURL_Unescape_url(sLONG_PTR *pResult, PackagePtr pParams);
//void cURL_Get_version(sLONG_PTR *pResult, PackagePtr pParams);
//void cURL_Get_date(sLONG_PTR *pResult, PackagePtr pParams);
